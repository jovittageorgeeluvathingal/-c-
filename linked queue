#include<stdio.h>
#include<stdlib.h>
struct queue
{
int data;
struct queue *next;
};
typedef struct queue queue;
queue *front=NULL;
queue *rear=NULL;
void enqueue()
{
if(front==NULL)
{
front=(queue*)malloc(sizeof(queue));
printf("\nEnter the element to be inserted : ");
scanf("%d",&front->data);
front->next=NULL;
rear=front;
}
else
{
rear->next=(queue*)malloc(sizeof(queue));
printf("\nEnter the element to be inserted : ");
scanf("%d",&rear->next->data);
rear->next->next=NULL;
rear=rear->next;
}
}
void dequeue()
{
if(front==NULL)
printf("\nEmpty Queue\n");
else if(front==rear)
{
printf("\n%d is deleted\n",front->data);

free(front);
front=rear=NULL;
}
else
{
printf("%d is deleted\n",front->data);

queue *t=front;
front=front->next;
free(t);
}
}
void display()
{
printf("\n");
queue *t=front;
while(t!=NULL)
{
printf("%d ",t->data);
t=t->next;
}
}
int main() {
int ch;
do
{
printf("\n1. Enqueue");
printf("\n2. Dequeue");
printf("\n3. Display");
printf("\n4. Exit");
printf("\nEnter your choice : ");
scanf("%d",&ch);
switch(ch)
{
case 1 : enqueue();
break;
case 2 : dequeue();
break;
case 3 : display();
break;
case 4 : exit(0);

break;

default : printf("\nInvalid Choice\n");

}
}while(ch!=4);
return 0;
}
